import fetch from "node-fetch";
import { Agent } from "https";

/**
 * The Agent class from the "https" module provides a way to customize
 * the behavior of HTTPS requests made by "node-fetch". In this context,
 * we're creating a custom agent that bypasses the default certificate
 * validation process by setting "rejectUnauthorized" to false.
 * This allows us to make requests to servers with self-signed
 * certificates without throwing errors.
 *
 * WARNING: This approach should ONLY be used in a development
 * environment. Disabling certificate verification in production
 * environments can expose your application to security vulnerabilities.
 *
 * --- The up-above description was generated by ChatGPT. Currently we are only utilizing this "fix" as long as we are developing.
 *     Once we get far enough into the project and eventual release, we will begin using certificates and alike.
 */

export default async function Home() {
  const data = await getData();
  console.log(data);

  return (
    <section>
      {data.map((menu_type) => (
        <div key={menu_type.menuTypeId}>
          <p>{menu_type.name}</p>
        </div>
      ))}
    </section>
  );
}

async function getData() {
  const agent = new Agent({
    rejectUnauthorized: false,
  });

  const res = await fetch("https://localhost:7040/MenuTypes/GetAllMenuTypes", {
    agent,
  });

  if (!res.ok) {
    throw new Error("Failed to fetch data");
  } else if (res.ok) {
    return res.json();
  }
}
